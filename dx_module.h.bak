#pragma once
#include <d3d11.h>
#include <D3DX10.h>
#include <d3dx11.h>
#include <d3dcompiler.h>
#include <XAudio2.h>
#include <mmsystem.h>
#include "WIN.h"

#pragma comment(lib,"d3d11.lib")
#pragma comment(lib,"d3dx10.lib")
#pragma comment(lib,"d3dx11.lib")
#pragma comment(lib,"d3dCompiler.lib")

//マクロ

#define SAFE_RELEASE(x) if(x){x->Release(); x = NULL;}

struct SimpleVertex
{
	D3DXVECTOR3 Pos;	//position
};

struct SIMPLESHADER_CONSTANT_BUFFER
{
	D3DXMATRIX mWVP;
};

//オリジナルメッシュ
struct MY_MESH
{
	DWORD dwNumVert;
	DWORD dwNumFace;
	ID3D11Buffer *pVertexBuffer;
	ID3D11Buffer *pIndexBuffer;
};

class DX_MODULE 
{
public:
	DX_MODULE();
	~DX_MODULE();
	HRESULT InitD3D(WIN* w);
	HRESULT InitPolygon();
	HRESULT InitStaticMesh(LPCSTR FIleName, MY_MESH *pMesh);
	HRESULT InitShader();
	void Loop();
	void App();
	void Render();
	void DestroyD3D();

	ID3D11Device *m_pDevice;
	ID3D11DeviceContext *m_pDeviceContext;
	IDXGISwapChain *m_pSwapChain;
	ID3D11RenderTargetView *m_pRenderTargetView;
	ID3D11DepthStencilView *m_pDepthStencilView;
	ID3D11Texture2D *m_pDepthStencil;
	//新規
	ID3D11InputLayout	*m_pVertexLayout;
	ID3D11VertexShader	*m_pVertexShader;
	ID3D11PixelShader	*m_pPixelShader;
	ID3D11Buffer		*m_pConstantBuffer;
	//バーテックスバッファ
	ID3D11Buffer		*m_pVertexBuffer;
	//↓モデルごと
	MY_MESH m_Mesh;
};